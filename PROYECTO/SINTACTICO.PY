from CONST import *

def ANALIZADOR_SINTACTICO(STACK_LEXICO):
    #DEFINIMOS EL INICIO Y FIN DEL STACK
    STACK_SINTACTICO=["$","P"]

    while len(STACK_SINTACTICO) > 0 and len(STACK_LEXICO) > 0:
        #IGUAL AL ULTIMO ELEMENTO DE LAS LISTAS (TOPE DEL STACK) 
        CURRENTS = STACK_SINTACTICO[-1]
        CURRENTL = STACK_LEXICO[-1]

        #ELIMINA EPSILON DEL STACK 
        if CURRENTS == "EPSILON":
            STACK_SINTACTICO.pop()
            continue

        if CURRENTS == CURRENTL and CURRENTS == "$":
            return
        #CREAMOS CONDICION PARA VERIFICAR QUE LOES ELEMENTOS SEAN TERMINALES
        if CURRENTS == CURRENTL and CURRENTS in TERMINALES:
            STACK_SINTACTICO.pop()
            STACK_LEXICO.pop()
            print("SE RECONOCE: ",CURRENTS)

        if CURRENTS != CURRENTL and CURRENTS in TERMINALES and CURRENTL in TERMINALES:
            print("ERROR")
            #SE DETIENE AQUÍ
            return

        if CURRENTS != CURRENTL and CURRENTS not in TERMINALES and CURRENTL in TERMINALES:
            #USAMOS EL INDEX PARA ENCONTRAR LA FILA DE LA MATRÍZ CORRESPONDIENTE A LA PALABRA ANO TERMINAL EN CURRENTS
            #AL IGUAL QUE CURRENTL PARA LA COLUMNA 
            #ASIGNAMOS EN PRODUCCIÓN EL NÚMERO DE PRODUCCIÓN QUE VAMOS A EMPUJAR EN EL STACK
            PRODUCCION = MATRIZ_SINTACTICA[NO_TERMINALES.index(CURRENTS)][TERMINALES.index(CURRENTL)]
            print(CURRENTS, CURRENTL)

            if PRODUCCION == 301:
                print("ERROR SINTACTICO: ")
                return
            else:
                STACK_SINTACTICO.pop()
                #SUMA DE LISTAS
                #USAMOS EL -1 PARA INVERTIT LA LISTA 
                STACK_SINTACTICO += PRODUCCIONES[PRODUCCION][::-1]






